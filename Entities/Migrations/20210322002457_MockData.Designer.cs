// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Entities.Migrations
{
    [DbContext(typeof(CarServiceContext))]
    [Migration("20210322002457_MockData")]
    partial class MockData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseSerialColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Entities.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseSerialColumn();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime>("ManufacturedMonth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ManufacturedYear")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationPlate")
                        .IsUnique();

                    b.HasIndex("VIN")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Rolls-Royce",
                            ManufacturedMonth = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturedYear = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Model = "Phantom",
                            RegistrationPlate = "L-255N",
                            VIN = "JN1BJ0HP5FM865848"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Nissan",
                            ManufacturedMonth = new DateTime(1970, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturedYear = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Model = "NX",
                            RegistrationPlate = "M-564N",
                            VIN = "WAUSF98E06A178440"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Cadillac",
                            ManufacturedMonth = new DateTime(1970, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturedYear = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Model = "DeVille",
                            RegistrationPlate = "M-712W",
                            VIN = "3C6TD4DT1CG744582"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Honda",
                            ManufacturedMonth = new DateTime(1970, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturedYear = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Model = "Odyssey",
                            RegistrationPlate = "E-8986",
                            VIN = "WAUSH98E27A557225"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Dodge",
                            ManufacturedMonth = new DateTime(1970, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ManufacturedYear = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Model = "Caravan",
                            RegistrationPlate = "E-968W",
                            VIN = "4JGCB2FB9AA509989"
                        });
                });

            modelBuilder.Entity("Entities.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseSerialColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "neberdt0@sciencedirect.com",
                            FirstName = "Neal",
                            LastName = "Mawditt",
                            MiddleName = "",
                            PhoneNumber = "+867166746215"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sorrey1@princeton.edu",
                            FirstName = "Sydney",
                            LastName = "Jeavon",
                            MiddleName = "",
                            PhoneNumber = "+529112499711"
                        },
                        new
                        {
                            Id = 3,
                            Email = "oshakelade2@buzzfeed.com",
                            FirstName = "Octavia",
                            LastName = "Kuhlmey",
                            MiddleName = "",
                            PhoneNumber = "+866517274856"
                        },
                        new
                        {
                            Id = 4,
                            Email = "mflack3@kickstarter.com",
                            FirstName = "Maighdiln",
                            LastName = "Bierling",
                            MiddleName = "",
                            PhoneNumber = "+3528413440113"
                        },
                        new
                        {
                            Id = 5,
                            Email = "fhealks4@wunderground.com",
                            FirstName = "Flossy",
                            LastName = "Wooddisse",
                            MiddleName = "",
                            PhoneNumber = "+2565212255733"
                        });
                });

            modelBuilder.Entity("Entities.Models.ClientCar", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<int>("CarId")
                        .HasColumnType("integer");

                    b.HasKey("ClientId", "CarId");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("ClientCars");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            CarId = 4
                        },
                        new
                        {
                            ClientId = 2,
                            CarId = 3
                        },
                        new
                        {
                            ClientId = 3,
                            CarId = 5
                        },
                        new
                        {
                            ClientId = 4,
                            CarId = 2
                        },
                        new
                        {
                            ClientId = 5,
                            CarId = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.ClientCar", b =>
                {
                    b.HasOne("Entities.Models.Car", "Car")
                        .WithMany("ClientCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Client", "client")
                        .WithMany("ClientCars")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("client");
                });

            modelBuilder.Entity("Entities.Models.Car", b =>
                {
                    b.Navigation("ClientCars");
                });

            modelBuilder.Entity("Entities.Models.Client", b =>
                {
                    b.Navigation("ClientCars");
                });
#pragma warning restore 612, 618
        }
    }
}
